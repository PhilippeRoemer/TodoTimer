{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","inputText","setInputText","inputTime","setInputTime","todoItems","setTodoItems","className","type","id","name","onChange","event","target","value","onClick","preventDefault","textInput","document","getElementById","timeInput","alert","text","time","Math","random","TodoItem","todo","completeHandler","map","item","completed","setModalIsOpen","setTime","useState","modalIsOpen","filter","element","isOpen","onRequestClose","initialTime","startImmediately","direction","lastUnit","Fragment","Minutes","Seconds","TodoList","Modal","setAppElement","App","darkMode","setDarkMode","class","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ca3226d8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoForm({ inputText, setInputText, inputTime, setInputTime, todoItems, setTodoItems }) {\r\n    function TodoTextInput(event) {\r\n        setInputText(event.target.value);\r\n    }\r\n\r\n    function TodoTimeInput(event) {\r\n        setInputTime(event.target.value);\r\n    }\r\n\r\n    function SubmitToDoHandler(event) {\r\n        event.preventDefault();\r\n        var textInput = document.getElementById(\"todo\").value;\r\n        var timeInput = document.getElementById(\"time\").value;\r\n        if (textInput === \"\" && timeInput === \"\") {\r\n            alert(\"Fill out both fields, nerd\");\r\n        } else if (textInput === \"\") {\r\n            alert(\"You forgot to enter a todo item\");\r\n        } else if (timeInput === \"\") {\r\n            alert(\"You forgot to enter in the time\");\r\n        } else {\r\n            setTodoItems([...todoItems, { text: inputText, time: inputTime, id: Math.random() * 10000 }]);\r\n            setInputText(\"\");\r\n            setInputTime(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"todoFormStyle\">\r\n            <h1 className=\"title\">To-Do Timer</h1>\r\n            <label>Enter To-Do</label>\r\n            <input type=\"text\" id=\"todo\" name=\"todo\" onChange={TodoTextInput} value={inputText}></input>\r\n            <br />\r\n            <label>Time to complete (in minutes)</label>\r\n            <input type=\"number\" id=\"time\" name=\"time\" onChange={TodoTimeInput} value={inputTime}></input>\r\n            <br />\r\n            <button type=\"submit\" onClick={SubmitToDoHandler}>\r\n                Submit\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Timer from \"react-compound-timer\";\r\n\r\nfunction TodoItem({ text, time, todo, todoItems, setTodoItems }) {\r\n    const deleteHandler = () => {\r\n        setTodoItems(todoItems.filter((element) => element.id !== todo.id));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodoItems(\r\n            todoItems.map((item) => {\r\n                if (item.id === todo.id) {\r\n                    return {\r\n                        ...item,\r\n                        completed: !item.completed,\r\n                    };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const setTime = time * 60000;\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    return (\r\n        <div>\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n                <div>\r\n                    {text} <br /> <span className=\"taskTime\">{time} Minutes</span>\r\n                </div>\r\n                <div className={`todo-item-hide ${todo.completed ? \"hideDiv\" : \"\"}`}>\r\n                    <button onClick={() => setModalIsOpen(true)} className=\"buttonStartTask\">\r\n                        Start Task\r\n                    </button>\r\n                </div>\r\n                <div className={`todo-item-hide ${todo.completed ? \"\" : \"hideDiv\"}`}>\r\n                    <button className=\"buttonCompleteList\">Task Completed</button>\r\n                </div>\r\n                <button onClick={deleteHandler} className=\"buttonRemove\">\r\n                    Remove\r\n                </button>\r\n            </li>{\" \"}\r\n            <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)} className={\"modalCustomStyle\"}>\r\n                <button onClick={() => setModalIsOpen(false)} className=\"buttonClose\">\r\n                    X\r\n                </button>\r\n                <p className=\"textCenter\">\r\n                    <b>Task Time:</b> {time} Minutes\r\n                </p>\r\n                <br />\r\n                <Timer initialTime={setTime} startImmediately={true} direction=\"backward\" lastUnit=\"m\">\r\n                    {() => (\r\n                        <React.Fragment>\r\n                            <div>\r\n                                <p className=\"textCenter\">\r\n                                    <b>Time remaining:</b> <Timer.Minutes /> minutes <Timer.Seconds /> seconds\r\n                                </p>\r\n                            </div>\r\n                            <br />\r\n                            <div>\r\n                                <button onClick={completeHandler} className=\"buttonComplete\">\r\n                                    Completed\r\n                                </button>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )}\r\n                </Timer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList({ todoItems, setTodoItems }) {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {todoItems.map((todo) => (\r\n                    <TodoItem key={todo.id} text={todo.text} time={todo.time} todo={todo} todoItems={todoItems} setTodoItems={setTodoItems} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./App.css\";\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nModal.setAppElement(\"#root\");\r\nfunction App() {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [inputTime, setInputTime] = useState(\"\");\r\n    const [todoItems, setTodoItems] = useState([]);\r\n\r\n    const [darkMode, setDarkMode] = useState(false);\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    return (\r\n        <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\r\n            <div className=\"container\">\r\n                <div className=\"DarkLightToggle\">\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" onChange={() => setDarkMode(!darkMode)} />\r\n                        <span class=\"slider round\"></span>\r\n                    </label>\r\n                    <h3 className=\"toggleText\">{darkMode ? \"Dark\" : \"Light\"} mode enabled</h3>\r\n                </div>\r\n                <TodoForm inputText={inputText} setInputText={setInputText} inputTime={inputTime} setInputTime={setInputTime} todoItems={todoItems} setTodoItems={setTodoItems} />\r\n                <TodoList todoItems={todoItems} setTodoItems={setTodoItems} />\r\n                <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n                    <p>Timer</p>\r\n                    <button onClick={() => setModalIsOpen(false)}>Close</button>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}